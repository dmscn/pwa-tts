/**
 * Language prefix mappings with their corresponding labels and emojis
 */
export const LANGUAGE_MAPPINGS = {
    a: { label: 'American English', emoji: 'ðŸ‡ºðŸ‡¸' },
    b: { label: 'British English', emoji: 'ðŸ‡¬ðŸ‡§' },
    e: { label: 'Spanish', emoji: 'ðŸ‡ªðŸ‡¸' },
    f: { label: 'French', emoji: 'ðŸ‡«ðŸ‡·' },
    h: { label: 'Hindi', emoji: 'ðŸ‡®ðŸ‡³' },
    i: { label: 'Italian', emoji: 'ðŸ‡®ðŸ‡¹' },
    j: { label: 'Japanese', emoji: 'ðŸ‡¯ðŸ‡µ' },
    p: { label: 'Brazilian Portuguese', emoji: 'ðŸ‡§ðŸ‡·' },
    z: { label: 'Mandarin Chinese', emoji: 'ðŸ‡¨ðŸ‡³' }
};

/**
 * Format a voice ID into a user-friendly display name
 * @param {string} voiceId - The voice ID (e.g., "af_bella")
 * @returns {string} Formatted voice name with language and emoji
 */
export const formatVoiceName = (voiceId) => {
    const [prefix, name] = voiceId.split('_');
    const language = prefix[0]; // First letter is language
    const languageInfo = LANGUAGE_MAPPINGS[language];

    if (!languageInfo) return voiceId;

    const formattedName = name.charAt(0).toUpperCase() + name.slice(1);
    return `${languageInfo.emoji} ${languageInfo.label} - ${formattedName}`;
};